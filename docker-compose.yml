version: "3.8"

services:
  # Backend API - Development
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=${DB_HOST};Database=${DB_NAME};User=${DB_NAME};Password=${DB_PASSWORD};TrustServerCertificate=True;
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
    ports:
      - "5000:80"
    volumes:
      - ./backend:/app
    networks:
      - app-network
    profiles: ["dev"]

  # Frontend - Development
  frontend-dev:
    build:
      context: ./frontend-svelte
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend-svelte:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:5000
    depends_on:
      - backend-dev
    profiles: ["dev"]

  # Backend API - Production
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8098:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Server=${DB_HOST};Database=${DB_NAME};User=${DB_NAME};Password=${DB_PASSWORD};TrustServerCertificate=True;
    restart: always
    profiles: ["prod"]

  # Frontend - Production
  frontend-prod:
    build:
      context: ./frontend-svelte
      dockerfile: Dockerfile
      args:
        VITE_API_URL: "${ORIGIN_URL}"
    ports:
      - "8099:3000"
    depends_on:
      - backend-prod
    environment:
      - ORIGIN=${ORIGIN_URL}
    restart: always
    profiles: ["prod"]

networks:
  app-network:
    driver: bridge
